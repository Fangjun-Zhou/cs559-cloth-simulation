{
  "version": 3,
  "sources": ["../white-dwarf/submodules/ecsy/node_modules/events/events.js", "../white-dwarf/node_modules/js-file-download/file-download.js", "../white-dwarf/submodules/ecsy/src/Utils.js", "../white-dwarf/submodules/ecsy/src/SystemManager.js", "../white-dwarf/submodules/ecsy/src/ObjectPool.js", "../white-dwarf/submodules/ecsy/src/EventDispatcher.js", "../white-dwarf/submodules/ecsy/src/Query.js", "../white-dwarf/submodules/ecsy/src/QueryManager.js", "../white-dwarf/submodules/ecsy/src/Component.js", "../white-dwarf/submodules/ecsy/src/SystemStateComponent.js", "../white-dwarf/submodules/ecsy/src/EntityManager.js", "../white-dwarf/submodules/ecsy/src/ComponentManager.js", "../white-dwarf/submodules/ecsy/src/Version.js", "../white-dwarf/submodules/ecsy/src/WrapImmutableComponent.js", "../white-dwarf/submodules/ecsy/src/Entity.js", "../white-dwarf/submodules/ecsy/src/World.js", "../white-dwarf/src/Core/ComponentRegistry.ts", "../white-dwarf/src/Core/Context/RenderContext.ts", "../white-dwarf/src/Core/CoreSetup.ts", "../white-dwarf/src/Core/index.ts", "../white-dwarf/submodules/ecsy/src/Types.js", "../white-dwarf/node_modules/gl-matrix/esm/common.js", "../white-dwarf/node_modules/gl-matrix/esm/mat3.js", "../white-dwarf/node_modules/gl-matrix/esm/mat4.js", "../white-dwarf/node_modules/gl-matrix/esm/quat.js", "../white-dwarf/node_modules/gl-matrix/esm/vec3.js", "../white-dwarf/node_modules/gl-matrix/esm/vec4.js", "../white-dwarf/node_modules/gl-matrix/esm/vec2.js", "../white-dwarf/src/Mathematics/Quaternion.ts", "../white-dwarf/src/Mathematics/Vector3.ts", "../white-dwarf/src/Core/Locomotion/DataComponent/TransformData3D.ts", "../white-dwarf/src/Mathematics/LineFrame3DSegment.ts", "../white-dwarf/src/Core/Render/DataComponent/LineFrameRenderData3D.ts", "../white-dwarf/src/Core/Render/DataComponent/PerspectiveCameraData3D.ts", "../white-dwarf/submodules/ecsy/src/System.js", "../white-dwarf/src/Core/Render/DataComponent/OrthographicCameraData3D.ts", "../white-dwarf/submodules/ecsy/src/TagComponent.js", "../white-dwarf/src/Core/Render/TagComponent/MainCameraTag.ts", "../white-dwarf/src/Core/Render/System/Canvas3DRenderer.ts", "../white-dwarf/src/Core/Render/System/BuildInRenderers/Canvas3DLineFrameRenderer.ts", "../white-dwarf/src/Core/Render/System/ClearCanvasSystem.ts", "../white-dwarf/src/Core/Render/RenderSystem3DRegister.ts", "../white-dwarf/src/Editor/EditorSystem3DRegister.ts", "../white-dwarf/src/Editor/TagComponent/EditorSceneCamTag.ts", "../white-dwarf/src/Editor/System/EditorCamTagAppendSystem.ts", "../src/index.ts", "../white-dwarf/src/Editor/index.ts", "../white-dwarf/src/Editor/TagComponent/EditorSelectedTag.ts", "../white-dwarf/src/Core/Serialization/EntitySerializer.ts", "../white-dwarf/src/Core/Serialization/WorldSerializer.ts", "../white-dwarf/src/Editor/EditorContext.ts", "../white-dwarf/src/Editor/EditorEntityListManager.ts", "../white-dwarf/src/Editor/System/EditorInspectorSystem.ts", "../white-dwarf/src/Mathematics/Vector2.ts", "../white-dwarf/src/Core/Locomotion/DataComponent/TransformData2D.ts", "../white-dwarf/src/Core/Render/DataComponent/CameraData2D.ts", "../white-dwarf/src/Core/Render/System/Canvas2DRenderer.ts", "../white-dwarf/src/Editor/System/EditorViewPort2DSystems.ts", "../src/editor.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n", "/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nexport function getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nexport function componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nexport function queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nexport const hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nexport const now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nexport function componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n", "import { now } from \"./Utils.js\";\n\nexport class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n", "export class ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n", "/**\n * @private\n * @class EventDispatcher\n */\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n", "import EventDispatcher from \"./EventDispatcher.js\";\nimport { queryKey } from \"./Utils.js\";\n\nexport default class Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n", "import Query from \"./Query.js\";\nimport { queryKey } from \"./Utils.js\";\n\n/**\n * @private\n * @class QueryManager\n */\nexport default class QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n", "import EventEmitter from \"events\";\n\nexport class Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this.eventEmitter = new EventEmitter();\n\n    this._pool = null;\n\n    this.onInspector = null;\n    this.useDefaultInspector = true;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    if (process.env.NODE_ENV !== \"production\") {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport const COMPONENT_CHANGE_EVENT = \"COMPONENT_CHANGE_EVENT\";\n", "import { Component } from \"./Component.js\";\n\nexport class SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n", "import { ObjectPool } from \"./ObjectPool.js\";\nimport QueryManager from \"./QueryManager.js\";\nimport EventDispatcher from \"./EventDispatcher.js\";\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nexport class EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n    this._entitiesById = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  getEntityById(id) {\n    return this._entitiesById[id];\n  }\n\n  getAllEntities() {\n    return this._entities;\n  }\n\n  idExists(id) {\n    return this._entitiesById[id] !== undefined;\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name, id) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n    // If the id is specified, use it.\n    if (id) {\n      entity.id = id;\n      // Remove all the duplicated in the pool free list.\n      this._entityPool.freeList = this._entityPool.freeList.filter(\n        e => e.id !== id\n      )\n    }\n    this._entitiesById[entity.id] = entity;\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    this.world.onEntityChanged.forEach(callback => {\n      callback(this._entities);\n    });\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n    this.entityRemoveAllComponents(entity, immediately);\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    if (this._entitiesById[entity.id]) {\n      delete this._entitiesById[entity.id];\n    }\n\n    entity._pool.release(entity);\n    this.world.onEntityChanged.forEach(callback => {\n      callback(this._entities);\n    });\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n", "import { ObjectPool } from \"./ObjectPool.js\";\n\nexport class ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n", "export const Version = \"0.3.1\";\n", "const proxyMap = new WeakMap();\n\nconst proxyHandler = {\n  set(target, prop) {\n    throw new Error(\n      `Tried to write to \"${target.constructor.getName()}#${String(\n        prop\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\n    );\n  },\n};\n\nexport default function wrapImmutableComponent(T, component) {\n  if (component === undefined) {\n    return undefined;\n  }\n\n  let wrappedComponent = proxyMap.get(component);\n\n  if (!wrappedComponent) {\n    wrappedComponent = new Proxy(component, proxyHandler);\n    proxyMap.set(component, wrappedComponent);\n  }\n\n  return wrappedComponent;\n}\n", "import Query from \"./Query.js\";\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\nimport { COMPONENT_CHANGE_EVENT } from \"./Component.js\";\n\nexport class Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    do {\n      this.id = entityManager._nextEntityId++;\n    } while (entityManager.idExists(this.id));\n    this.name = \"\";\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n\n    // Call component changed callback.\n    component.eventEmitter.emit(COMPONENT_CHANGE_EVENT, component);\n\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n", "import { SystemManager } from \"./SystemManager.js\";\nimport { EntityManager } from \"./EntityManager.js\";\nimport { ComponentManager } from \"./ComponentManager.js\";\nimport { Version } from \"./Version.js\";\nimport { hasWindow, now } from \"./Utils.js\";\nimport { Entity } from \"./Entity.js\";\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nexport class World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    // Entity change callbacks.\n    this.onEntityChanged = [];\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name, id) {\n    return this.entityManager.createEntity(name, id);\n  }\n\n  getAllEntities() {\n    return this.entityManager.getAllEntities();\n  }\n\n  getEntityByName(name) {\n    return this.entityManager.getEntityByName(name);\n  }\n\n  getEntityById(id) {\n    return this.entityManager.getEntityById(id);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n", "import { Component, ComponentConstructor } from \"ecsy/Component\";\n\nexport interface IComponent extends Component<IComponent> {}\n\n// Registry of all components\nexport namespace IComponent {\n  const implementations: ComponentConstructor<IComponent>[] = [];\n\n  export function getImplementations(): ComponentConstructor<IComponent>[] {\n    return implementations;\n  }\n\n  export function register<T extends ComponentConstructor<IComponent>>(\n    ctor: T\n  ) {\n    implementations.push(ctor);\n    return ctor;\n  }\n}\n", "import { Entity } from \"ecsy/Entity\";\n\nexport interface IEditorRenderContext {\n  mainCanvas: HTMLCanvasElement | null;\n  mainCamera: Entity | null;\n}\n\nexport const coreRenderContext: IEditorRenderContext = {\n  mainCanvas: null,\n  mainCamera: null,\n};\n", "import { mainWorld } from \".\";\n\nimport { IComponent } from \"./ComponentRegistry\";\nimport { coreRenderContext } from \"./Context/RenderContext\";\nimport { ISystemContext } from \"./Context/SystemContext\";\n\nexport const coreSetup = () => {\n  if (!coreRenderContext.mainCanvas) {\n    throw new Error(\"Main canvas is not ready.\");\n  }\n\n  // Register all components.\n  let componentConstructors = IComponent.getImplementations();\n  for (let i = 0; i < componentConstructors.length; i++) {\n    mainWorld.registerComponent(componentConstructors[i]);\n  }\n\n  // Call core setup callback.\n  systemContext.coreSetup();\n};\n\nexport const systemContext: ISystemContext = {\n  coreSetup: () => {},\n  coreStart: async () => {},\n  editorStart: () => {},\n};\n", "import { World } from \"ecsy/World\";\nimport { ITimeContext } from \"./Context/TimeContext\";\nimport { coreSetup, systemContext } from \"./CoreSetup\";\n\n// Main world to hold all game entities.\nexport let mainWorld = new World();\n// Physics world to hold all physics entities.\nexport let physicsWorld = new World();\n\n// Time context.\nexport const timeContext: ITimeContext = {\n  startTime: 0,\n  currentTime: 0,\n  deltaTime: 0,\n  timeScale: 1,\n  fixedTimeStep: 1 / 60,\n};\n\n// Frame update.\nconst mainUpdate = () => {\n  // Update time context.\n  let currentTime = Date.now() / 1000;\n  timeContext.deltaTime =\n    (currentTime - timeContext.currentTime) * timeContext.timeScale;\n  timeContext.currentTime = currentTime;\n\n  mainWorld.execute(timeContext.deltaTime);\n  requestAnimationFrame(mainUpdate);\n};\n\n// Physics update.\nconst physicsUpdate = async () => {\n  while (true) {\n    physicsWorld.execute(timeContext.fixedTimeStep);\n\n    // Wait for fixed time step.\n    await new Promise((resolve) =>\n      setTimeout(resolve, timeContext.fixedTimeStep * 1000)\n    );\n  }\n};\n\nexport const releaseInit = async () => {\n  // Setup core.\n  coreSetup();\n\n  await systemContext.coreStart({});\n\n  // Start white dwarf.\n  mainInit();\n};\n\nexport const mainInit = () => {\n  // Initialize time context.\n  timeContext.startTime = Date.now() / 1000;\n  timeContext.currentTime = timeContext.startTime;\n  timeContext.deltaTime = 0;\n\n  // Request animation frame.\n  requestAnimationFrame(mainUpdate);\n\n  // Start async physics update.\n  physicsUpdate();\n};\n\nexport const resetWorld = () => {\n  mainWorld = new World();\n  physicsWorld = new World();\n};\n", "export const copyValue = (src) => src;\n\nexport const cloneValue = (src) => src;\n\nexport const copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nexport const cloneArray = (src) => src && src.slice();\n\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nexport const cloneClonable = (src) => src && src.clone();\n\nexport function createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nexport const Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import { createType, copyCopyable, cloneClonable } from \"ecsy/Types\";\nimport { quat, vec4 } from \"gl-matrix\";\n\nexport class Quaternion {\n  value: quat;\n\n  constructor(x: number, y: number, z: number, w: number) {\n    this.value = quat.fromValues(x, y, z, w);\n  }\n\n  set(x: number, y: number, z: number, w: number) {\n    quat.set(this.value, x, y, z, w);\n  }\n\n  copy(q: Quaternion): Quaternion {\n    this.value = quat.copy(this.value, q.value);\n    return this;\n  }\n\n  clone(): Quaternion {\n    return new Quaternion(\n      this.value[0],\n      this.value[1],\n      this.value[2],\n      this.value[3]\n    );\n  }\n}\n\nexport const QuaternionType = createType({\n  name: \"Quaternion\",\n  default: new Quaternion(0, 0, 0, 1),\n  copy: copyCopyable<Quaternion>,\n  clone: cloneClonable<Quaternion>,\n});\n\nexport const QuaternionCustomEditor = (\n  value: Quaternion,\n  onChange: (value: Quaternion) => void\n): [HTMLDivElement, (v: Quaternion) => void] => {\n  const quaternionDiv = document.createElement(\"div\");\n  quaternionDiv.style.display = \"flex\";\n  quaternionDiv.style.flexDirection = \"row\";\n\n  const xLabel = document.createElement(\"label\");\n  xLabel.innerText = \"X\";\n  quaternionDiv.appendChild(xLabel);\n  const xInput = document.createElement(\"input\");\n  xInput.type = \"number\";\n  xInput.style.minWidth = \"0px\";\n  xInput.style.flexGrow = \"1\";\n  xInput.value = value.value[0].toString();\n  quaternionDiv.appendChild(xInput);\n\n  const yLabel = document.createElement(\"label\");\n  yLabel.innerText = \"Y\";\n  quaternionDiv.appendChild(yLabel);\n  const yInput = document.createElement(\"input\");\n  yInput.type = \"number\";\n  yInput.style.minWidth = \"0px\";\n  yInput.style.flexGrow = \"1\";\n  yInput.value = value.value[1].toString();\n  quaternionDiv.appendChild(yInput);\n\n  const zLabel = document.createElement(\"label\");\n  zLabel.innerText = \"Z\";\n  quaternionDiv.appendChild(zLabel);\n  const zInput = document.createElement(\"input\");\n  zInput.type = \"number\";\n  zInput.style.minWidth = \"0px\";\n  zInput.style.flexGrow = \"1\";\n  zInput.value = value.value[2].toString();\n  quaternionDiv.appendChild(zInput);\n\n  const wLabel = document.createElement(\"label\");\n  wLabel.innerText = \"W\";\n  quaternionDiv.appendChild(wLabel);\n  const wInput = document.createElement(\"input\");\n  wInput.type = \"number\";\n  wInput.style.minWidth = \"0px\";\n  wInput.style.flexGrow = \"1\";\n  wInput.value = value.value[3].toString();\n  quaternionDiv.appendChild(wInput);\n\n  const update = () => {\n    onChange(\n      new Quaternion(\n        parseFloat(xInput.value),\n        parseFloat(yInput.value),\n        parseFloat(zInput.value),\n        parseFloat(wInput.value)\n      )\n    );\n  };\n\n  const setQuaternion = (q: Quaternion) => {\n    if (\n      document.activeElement === xInput ||\n      document.activeElement === yInput ||\n      document.activeElement === zInput ||\n      document.activeElement === wInput\n    ) {\n      return;\n    }\n\n    xInput.value = q.value[0].toString();\n    yInput.value = q.value[1].toString();\n    zInput.value = q.value[2].toString();\n    wInput.value = q.value[3].toString();\n  };\n\n  xInput.addEventListener(\"change\", update);\n  yInput.addEventListener(\"change\", update);\n  zInput.addEventListener(\"change\", update);\n  wInput.addEventListener(\"change\", update);\n\n  return [quaternionDiv, setQuaternion];\n};\n", "import { createType, copyCopyable, cloneClonable } from \"ecsy/Types\";\nimport { vec3 } from \"gl-matrix\";\n\nexport class Vector3 {\n  value: vec3;\n\n  constructor(x: number, y: number, z: number) {\n    this.value = vec3.fromValues(x, y, z);\n  }\n\n  set(x: number, y: number, z: number) {\n    vec3.set(this.value, x, y, z);\n  }\n\n  copy(v: Vector3): Vector3 {\n    this.value = vec3.copy(this.value, v.value);\n    return this;\n  }\n\n  clone(): Vector3 {\n    return new Vector3(this.value[0], this.value[1], this.value[2]);\n  }\n}\n\nexport const Vector3Type = createType({\n  name: \"Vector3\",\n  default: new Vector3(0, 0, 0),\n  copy: copyCopyable<Vector3>,\n  clone: cloneClonable<Vector3>,\n});\n\nexport const Vector3CustomEditor = (\n  value: Vector3,\n  onChange: (value: Vector3) => void\n): [HTMLDivElement, (v: Vector3) => void] => {\n  const vector3Div = document.createElement(\"div\");\n  vector3Div.style.display = \"flex\";\n  vector3Div.style.flexDirection = \"row\";\n\n  const xLabel = document.createElement(\"label\");\n  xLabel.innerText = \"X\";\n  vector3Div.appendChild(xLabel);\n  const xInput = document.createElement(\"input\");\n  xInput.type = \"number\";\n  xInput.style.minWidth = \"0px\";\n  xInput.style.flexGrow = \"1\";\n  xInput.value = value.value[0].toString();\n  vector3Div.appendChild(xInput);\n\n  const yLabel = document.createElement(\"label\");\n  yLabel.innerText = \"Y\";\n  vector3Div.appendChild(yLabel);\n  const yInput = document.createElement(\"input\");\n  yInput.type = \"number\";\n  yInput.style.minWidth = \"0px\";\n  yInput.style.flexGrow = \"1\";\n  yInput.value = value.value[1].toString();\n  vector3Div.appendChild(yInput);\n\n  const zLabel = document.createElement(\"label\");\n  zLabel.innerText = \"Z\";\n  vector3Div.appendChild(zLabel);\n  const zInput = document.createElement(\"input\");\n  zInput.type = \"number\";\n  zInput.style.minWidth = \"0px\";\n  zInput.style.flexGrow = \"1\";\n  zInput.value = value.value[2].toString();\n  vector3Div.appendChild(zInput);\n\n  const update = () => {\n    onChange(\n      new Vector3(\n        parseFloat(xInput.value),\n        parseFloat(yInput.value),\n        parseFloat(zInput.value)\n      )\n    );\n  };\n\n  const setVector3 = (v: Vector3) => {\n    if (\n      document.activeElement === xInput ||\n      document.activeElement === yInput ||\n      document.activeElement === zInput\n    ) {\n      return;\n    }\n\n    xInput.value = v.value[0].toString();\n    yInput.value = v.value[1].toString();\n    zInput.value = v.value[2].toString();\n  };\n\n  xInput.addEventListener(\"change\", update);\n  yInput.addEventListener(\"change\", update);\n  zInput.addEventListener(\"change\", update);\n\n  return [vector3Div, setVector3];\n};\n", "import {\n  Component,\n  ComponentSchema,\n  COMPONENT_CHANGE_EVENT,\n} from \"ecsy/Component\";\nimport {\n  Quaternion,\n  QuaternionCustomEditor,\n  QuaternionType,\n} from \"../../../Mathematics/Quaternion\";\nimport {\n  Vector3,\n  Vector3CustomEditor,\n  Vector3Type,\n} from \"../../../Mathematics/Vector3\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class TransformData3D extends Component<TransformData3D> {\n  static schema: ComponentSchema = {\n    position: {\n      type: Vector3Type,\n      default: new Vector3(0, 0, 0),\n    },\n    rotation: {\n      type: QuaternionType,\n      default: new Quaternion(0, 0, 0, 1),\n    },\n    scale: {\n      type: Vector3Type,\n      default: new Vector3(1, 1, 1),\n    },\n  };\n\n  position!: Vector3;\n  rotation!: Quaternion;\n  scale!: Vector3;\n\n  public useDefaultInspector: boolean = false;\n  public onInspector: (componentDiv: HTMLDivElement) => void | null = (\n    componentDiv: HTMLDivElement\n  ) => {\n    const transformDiv = document.createElement(\"div\");\n\n    // Position editor.\n    const positionDiv = document.createElement(\"div\");\n    // Position title.\n    positionDiv.appendChild(document.createTextNode(\"Position\"));\n    // Position Vector3 editor.\n    const [positionVector3Div, setPosition] = Vector3CustomEditor(\n      this.position,\n      (newValue) => {\n        this.position = newValue;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      }\n    );\n    positionDiv.appendChild(positionVector3Div);\n\n    // Rotation editor.\n    const rotationDiv = document.createElement(\"div\");\n    // Rotation title.\n    rotationDiv.appendChild(document.createTextNode(\"Rotation\"));\n    // Rotation Quaternion editor.\n    const [rotationQuaternionDiv, setRotation] = QuaternionCustomEditor(\n      this.rotation,\n      (newValue) => {\n        this.rotation = newValue;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      }\n    );\n    rotationDiv.appendChild(rotationQuaternionDiv);\n\n    // Scale editor.\n    const scaleDiv = document.createElement(\"div\");\n    // Scale title.\n    scaleDiv.appendChild(document.createTextNode(\"Scale\"));\n    // Scale Vector3 editor.\n    const [scaleVector3Div, setScale] = Vector3CustomEditor(\n      this.scale,\n      (newValue) => {\n        this.scale = newValue;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      }\n    );\n    scaleDiv.appendChild(scaleVector3Div);\n\n    // Append all editors to the transform editor.\n    transformDiv.appendChild(positionDiv);\n    transformDiv.appendChild(rotationDiv);\n    transformDiv.appendChild(scaleDiv);\n\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\n      setPosition(this.position);\n      setRotation(this.rotation);\n      setScale(this.scale);\n    });\n\n    // Append the transform editor to the component editor.\n    componentDiv.appendChild(transformDiv);\n  };\n}\n", "import { cloneClonable, copyCopyable, createType } from \"ecsy/Types\";\nimport { Vector3, Vector3CustomEditor } from \"./Vector3\";\n\nexport class LineFrame3DSegment {\n  public p0: Vector3;\n  public p1: Vector3;\n\n  constructor(p0: Vector3, p1: Vector3) {\n    this.p0 = p0;\n    this.p1 = p1;\n  }\n\n  set(p0: Vector3, p1: Vector3) {\n    this.p0 = p0;\n    this.p1 = p1;\n  }\n\n  copy(h: LineFrame3DSegment): LineFrame3DSegment {\n    this.p0 = h.p0.clone();\n    this.p1 = h.p1.clone();\n    return this;\n  }\n\n  clone(): LineFrame3DSegment {\n    return new LineFrame3DSegment(this.p0.clone(), this.p1.clone());\n  }\n}\n\nexport const LineFrame3DSegmentType = createType({\n  name: \"LineFrame3DSegment\",\n  default: new LineFrame3DSegment(new Vector3(0, 0, 0), new Vector3(0, 0, 0)),\n  copy: copyCopyable<LineFrame3DSegment>,\n  clone: cloneClonable<LineFrame3DSegment>,\n});\n\nexport const LineFrame3DSegmentEditor = (\n  segment: LineFrame3DSegment,\n  onChange: (segment: LineFrame3DSegment) => void\n): HTMLElement => {\n  const el = document.createElement(\"div\");\n  const p0 = document.createElement(\"div\");\n  const p1 = document.createElement(\"div\");\n  el.appendChild(p0);\n  el.appendChild(p1);\n  p0.innerText = \"p0\";\n  p1.innerText = \"p1\";\n  p0.appendChild(\n    Vector3CustomEditor(segment.p0, (v) => {\n      segment.p0 = v;\n      onChange(segment);\n    })[0]\n  );\n  p1.appendChild(\n    Vector3CustomEditor(segment.p1, (v) => {\n      segment.p1 = v;\n      onChange(segment);\n    })[0]\n  );\n  return el;\n};\n", "import {\n  Component,\n  ComponentSchema,\n  COMPONENT_CHANGE_EVENT,\n} from \"ecsy/Component\";\nimport { Types } from \"ecsy/Types\";\nimport {\n  LineFrame3DSegment,\n  LineFrame3DSegmentEditor,\n} from \"../../../Mathematics/LineFrame3DSegment\";\nimport { Vector3 } from \"../../../Mathematics/Vector3\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class LineFrameRenderData3D extends Component<LineFrameRenderData3D> {\n  static schema: ComponentSchema = {\n    segments: {\n      type: Types.Array,\n      default: [],\n    },\n  };\n\n  public segments: LineFrame3DSegment[] = [];\n\n  public useDefaultInspector = false;\n  public onInspector = (componentDiv: HTMLDivElement) => {\n    const curveSegmentsDiv = document.createElement(\"div\");\n    curveSegmentsDiv.style.display = \"flex\";\n    curveSegmentsDiv.style.flexDirection = \"column\";\n\n    this.populateSegmentEditor(curveSegmentsDiv);\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, (component) => {\n      this.RepopulateCurveUI(curveSegmentsDiv);\n    });\n\n    componentDiv.appendChild(curveSegmentsDiv);\n\n    const addCurveSegmentButton = document.createElement(\"button\");\n    addCurveSegmentButton.innerText = \"Add Curve Segment\";\n    addCurveSegmentButton.onclick = () => {\n      this.segments.push(\n        new LineFrame3DSegment(new Vector3(0, 0, 0), new Vector3(0, 0, 0))\n      );\n\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    };\n    componentDiv.appendChild(addCurveSegmentButton);\n  };\n\n  private RepopulateCurveUI(curveSegmentsDiv: HTMLDivElement) {\n    curveSegmentsDiv.innerHTML = \"\";\n\n    // Populate segment editor.\n    this.populateSegmentEditor(curveSegmentsDiv);\n  }\n\n  private populateSegmentEditor(curveSegmentsDiv: HTMLDivElement) {\n    this.segments.forEach((segment, index) => {\n      // Segment div.\n      const segmentDiv = document.createElement(\"div\");\n      segmentDiv.style.display = \"flex\";\n      segmentDiv.style.flexDirection = \"column\";\n      segmentDiv.style.border = \"1px solid black\";\n\n      // Segment header.\n      segmentDiv.appendChild(document.createTextNode(`Segment ${index}`));\n\n      // Segment editor.\n      const segmentEditor = LineFrame3DSegmentEditor(segment, (value) => {\n        this.segments[index] = value;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      });\n      segmentDiv.appendChild(segmentEditor);\n\n      // Remove segment button.\n      const removeSegmentButton = document.createElement(\"button\");\n      removeSegmentButton.appendChild(document.createTextNode(\"Remove\"));\n      removeSegmentButton.onclick = () => {\n        this.segments.splice(index, 1);\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      };\n      segmentDiv.appendChild(removeSegmentButton);\n\n      // Add segment to curve.\n      curveSegmentsDiv.appendChild(segmentDiv);\n    });\n  }\n}\n", "import {\n  Component,\n  ComponentSchema,\n  COMPONENT_CHANGE_EVENT,\n} from \"ecsy/Component\";\nimport { Types } from \"ecsy/Types\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class PerspectiveCameraData3D extends Component<PerspectiveCameraData3D> {\n  static schema: ComponentSchema = {\n    fov: {\n      type: Types.Number,\n      default: Math.PI / 4,\n    },\n    aspect: {\n      type: Types.Number,\n      default: 1,\n    },\n    near: {\n      type: Types.Number,\n      default: 0.1,\n    },\n    far: {\n      type: Types.Number,\n      default: 1000,\n    },\n  };\n\n  // y field of view in radians.\n  fov!: number;\n  // Camera aspect ratio.\n  aspect!: number;\n  // Camera near plane distance.\n  near!: number;\n  // Camera far plane distance.\n  far!: number;\n\n  public useDefaultInspector: boolean = false;\n  public onInspector: (componentDiv: HTMLDivElement) => void | null = (\n    componentDiv: HTMLDivElement\n  ) => {\n    const fovDiv = document.createElement(\"div\");\n    fovDiv.style.display = \"flex\";\n    fovDiv.style.flexDirection = \"row\";\n\n    fovDiv.appendChild(document.createTextNode(\"fov: \"));\n    // FOV Slider.\n    const fovSlider = document.createElement(\"input\");\n    fovSlider.type = \"range\";\n    fovSlider.min = \"0\";\n    fovSlider.max = \"3.14\";\n    fovSlider.step = \"0.01\";\n    fovSlider.value = this.fov.toString();\n    fovSlider.style.flex = \"1\";\n    fovSlider.addEventListener(\"change\", (event) => {\n      this.fov = parseFloat(fovSlider.value);\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    });\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\n      // If the input is focused, don't update it.\n      if (document.activeElement !== fovSlider) {\n        fovSlider.value = this.fov.toString();\n      }\n    });\n    fovDiv.appendChild(fovSlider);\n\n    const aspectDiv = document.createElement(\"div\");\n    aspectDiv.style.display = \"flex\";\n    aspectDiv.style.flexDirection = \"row\";\n\n    aspectDiv.appendChild(document.createTextNode(\"aspect: \"));\n    const aspectInput = document.createElement(\"input\");\n    aspectInput.type = \"number\";\n    aspectInput.value = this.aspect.toString();\n    aspectInput.style.minWidth = \"0px\";\n    aspectInput.style.flex = \"1\";\n    aspectInput.addEventListener(\"change\", (event) => {\n      this.aspect = parseFloat(aspectInput.value);\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    });\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\n      // If the input is focused, don't update it.\n      if (document.activeElement !== aspectInput) {\n        aspectInput.value = this.aspect.toString();\n      }\n    });\n    aspectDiv.appendChild(aspectInput);\n\n    const nearDiv = document.createElement(\"div\");\n    nearDiv.style.display = \"flex\";\n    nearDiv.style.flexDirection = \"row\";\n\n    nearDiv.appendChild(document.createTextNode(\"near: \"));\n    const nearInput = document.createElement(\"input\");\n    nearInput.type = \"number\";\n    nearInput.value = this.near.toString();\n    nearInput.style.minWidth = \"0px\";\n    nearInput.style.flex = \"1\";\n    nearInput.addEventListener(\"change\", (event) => {\n      this.near = parseFloat(nearInput.value);\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    });\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\n      // If the input is focused, don't update it.\n      if (document.activeElement !== nearInput) {\n        nearInput.value = this.near.toString();\n      }\n    });\n    nearDiv.appendChild(nearInput);\n\n    const farDiv = document.createElement(\"div\");\n    farDiv.style.display = \"flex\";\n    farDiv.style.flexDirection = \"row\";\n\n    farDiv.appendChild(document.createTextNode(\"far: \"));\n    const farInput = document.createElement(\"input\");\n    farInput.type = \"number\";\n    farInput.value = this.far.toString();\n    farInput.style.minWidth = \"0px\";\n    farInput.style.flex = \"1\";\n    farInput.addEventListener(\"change\", (event) => {\n      this.far = parseFloat(farInput.value);\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    });\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\n      // If the input is focused, don't update it.\n      if (document.activeElement !== farInput) {\n        farInput.value = this.far.toString();\n      }\n    });\n    farDiv.appendChild(farInput);\n\n    componentDiv.appendChild(fovDiv);\n    componentDiv.appendChild(aspectDiv);\n    componentDiv.appendChild(nearDiv);\n    componentDiv.appendChild(farDiv);\n  };\n}\n", "import Query from \"./Query.js\";\nimport { componentRegistered } from \"./Utils.js\";\n\nexport class System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else {\n                  /*\n                  // Checking just specific components\n                  let changedList = (this.queries[queryName][eventName] = {});\n                  event.forEach(component => {\n                    let eventList = (changedList[\n                      componentPropertyName(component)\n                    ] = []);\n                    query.eventDispatcher.addEventListener(\n                      Query.prototype.COMPONENT_CHANGED,\n                      (entity, changedComponent) => {\n                        if (\n                          changedComponent.constructor === component &&\n                          eventList.indexOf(entity) === -1\n                        ) {\n                          eventList.push(entity);\n                        }\n                      }\n                    );\n                  });\n                  */\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport function Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n", "import { Component, ComponentSchema } from \"ecsy/Component\";\nimport { Types } from \"ecsy/Types\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class OrthographicCameraData3D extends Component<OrthographicCameraData3D> {\n  static schema: ComponentSchema = {\n    left: {\n      type: Types.Number,\n      default: -1,\n    },\n    right: {\n      type: Types.Number,\n      default: 1,\n    },\n    top: {\n      type: Types.Number,\n      default: 1,\n    },\n    bottom: {\n      type: Types.Number,\n      default: -1,\n    },\n    near: {\n      type: Types.Number,\n      default: 0.1,\n    },\n    far: {\n      type: Types.Number,\n      default: 1000,\n    },\n  };\n\n  // Camera left plane distance.\n  left!: number;\n  // Camera right plane distance.\n  right!: number;\n  // Camera top plane distance.\n  top!: number;\n  // Camera bottom plane distance.\n  bottom!: number;\n  // Camera near plane distance.\n  near!: number;\n  // Camera far plane distance.\n  far!: number;\n}\n", "import { Component } from \"./Component.js\";\n\nexport class TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n", "import { TagComponent } from \"ecsy/TagComponent\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class MainCameraTag extends TagComponent {}\n", "import { Attributes, System, SystemQueries } from \"ecsy/System\";\nimport { mat4 } from \"gl-matrix\";\nimport { TransformData3D } from \"../../Locomotion/DataComponent/TransformData3D\";\nimport { OrthographicCameraData3D } from \"../DataComponent/OrthographicCameraData3D\";\nimport { PerspectiveCameraData3D } from \"../DataComponent/PerspectiveCameraData3D\";\nimport { MainCameraTag } from \"../TagComponent/MainCameraTag\";\n\nexport class Canvas3DRenderer extends System {\n  static queries: SystemQueries = {\n    perspectiveMainCamera: {\n      components: [MainCameraTag, PerspectiveCameraData3D, TransformData3D],\n    },\n    orthographicMainCamera: {\n      components: [MainCameraTag, OrthographicCameraData3D, TransformData3D],\n    },\n  };\n\n  mainCanvas!: HTMLCanvasElement;\n  canvasContext!: CanvasRenderingContext2D;\n\n  worldToCamera: mat4 = mat4.create();\n  cameraToScreen: mat4 = mat4.create();\n\n  init(attributes?: Attributes | undefined): void {\n    this.mainCanvas = attributes?.mainCanvas;\n    this.canvasContext = this.mainCanvas.getContext(\n      \"2d\"\n    ) as CanvasRenderingContext2D;\n  }\n\n  execute(delta: number, time: number): void {\n    // Check if main camera exists.\n    if (\n      this.queries.perspectiveMainCamera.results.length +\n        this.queries.orthographicMainCamera.results.length ===\n      0\n    ) {\n      throw new Error(\"Main camera not found.\");\n    }\n    // Check if there's more than one main camera.\n    else if (\n      this.queries.perspectiveMainCamera.results.length +\n        this.queries.orthographicMainCamera.results.length >\n      1\n    ) {\n      throw new Error(\"More than one main camera found.\");\n    }\n  }\n\n  /**\n   * Construct a transform matrix from world space to model space.\n   * @param camTransform the transform of the camera.\n   * @param camData the camera data.\n   * @returns the world to model matrix.\n   */\n  orthographicWorldToCamera(\n    camTransform: TransformData3D,\n    camData: OrthographicCameraData3D\n  ): mat4 {\n    // Construct world to camera matrix.\n    const worldToCamera = mat4.create();\n    mat4.invert(worldToCamera, this.objectToWorld(camTransform));\n    mat4.ortho(\n      worldToCamera,\n      camData.left,\n      camData.right,\n      camData.bottom,\n      camData.top,\n      camData.near,\n      camData.far\n    );\n    return worldToCamera;\n  }\n\n  /**\n   * Construct a transform matrix from world space to camera space.\n   *\n   * @param camTransform the transform of the camera.\n   * @param camData the camera data.\n   * @returns the world to camera matrix.\n   */\n  perspectiveWorldToCamera(\n    camTransform: TransformData3D,\n    camData: PerspectiveCameraData3D\n  ): mat4 {\n    // Construct world to camera matrix.\n    const worldToCamera = mat4.create();\n    mat4.invert(worldToCamera, this.objectToWorld(camTransform));\n    const perspective = mat4.create();\n    mat4.perspective(\n      perspective,\n      camData.fov,\n      camData.aspect,\n      camData.near,\n      camData.far\n    );\n    mat4.multiply(worldToCamera, perspective, worldToCamera);\n    return worldToCamera;\n  }\n\n  /**\n   * Construct a transform matrix from model space to world space.\n   *\n   * @param transform the transform of the model.\n   * @returns the model to world matrix.\n   */\n  objectToWorld(transform: TransformData3D): mat4 {\n    const objectToWorld = mat4.create();\n    mat4.fromRotationTranslationScale(\n      objectToWorld,\n      transform.rotation.value,\n      transform.position.value,\n      transform.scale.value\n    );\n    return objectToWorld;\n  }\n\n  generateCameraToScreenMatrix() {\n    this.cameraToScreen = mat4.create();\n\n    mat4.fromTranslation(this.cameraToScreen, [\n      this.mainCanvas.width / 2,\n      this.mainCanvas.height / 2,\n      0,\n    ]);\n\n    mat4.scale(this.cameraToScreen, this.cameraToScreen, [100, 100, 1]);\n  }\n}\n", "import { System, SystemQueries } from \"ecsy/System\";\nimport { mat4, vec2, vec3 } from \"gl-matrix\";\nimport { TransformData3D } from \"../../../Locomotion/DataComponent/TransformData3D\";\nimport { LineFrameRenderData3D } from \"../../DataComponent/LineFrameRenderData3D\";\nimport { PerspectiveCameraData3D } from \"../../DataComponent/PerspectiveCameraData3D\";\nimport { Canvas3DRenderer } from \"../Canvas3DRenderer\";\n\nexport class Canvas3DLineFrameRenderer extends Canvas3DRenderer {\n  static queries: SystemQueries = {\n    ...this.queries,\n    lineEntities: {\n      components: [LineFrameRenderData3D, TransformData3D],\n    },\n  };\n\n  execute(delta: number, time: number): void {\n    try {\n      super.execute(delta, time);\n    } catch (error) {\n      console.warn(error);\n      return;\n    }\n\n    // Generate camera to screen matrix.\n    this.generateCameraToScreenMatrix();\n\n    // Get the canvas size.\n    const canvasSize = vec2.fromValues(\n      this.mainCanvas.width,\n      this.mainCanvas.height\n    );\n    // Get Object to world to screen space matrix.\n    if (this.queries.perspectiveMainCamera.results.length > 0) {\n      // Perspective camera.\n      const camera = this.queries.perspectiveMainCamera.results[0];\n      const cameraTransform = camera.getComponent(\n        TransformData3D\n      ) as TransformData3D;\n      const cameraPerspective = camera.getMutableComponent(\n        PerspectiveCameraData3D\n      ) as PerspectiveCameraData3D;\n\n      // Change the aspect ratio.\n      cameraPerspective.aspect = canvasSize[0] / canvasSize[1];\n\n      this.worldToCamera = this.perspectiveWorldToCamera(\n        cameraTransform,\n        cameraPerspective\n      );\n    } else {\n      // TODO: Orthographic camera.\n    }\n\n    // Draw all frame lines.\n    this.queries.lineEntities.results.forEach((entity) => {\n      // Get the transform and render data.\n      const transform = entity.getComponent(TransformData3D) as TransformData3D;\n      const renderData = entity.getComponent(\n        LineFrameRenderData3D\n      ) as LineFrameRenderData3D;\n\n      // Generate object to world matrix.\n      const objectToWorld = this.objectToWorld(transform);\n\n      renderData.segments.forEach((segment) => {\n        // Generate object to camera matrix.\n        const objectToScreen = mat4.create();\n        mat4.multiply(objectToScreen, this.worldToCamera, objectToWorld);\n        mat4.multiply(objectToScreen, this.cameraToScreen, objectToScreen);\n\n        // Generate screen space start point.\n        const startPoint = vec3.create();\n        vec3.transformMat4(startPoint, segment.p0.value, objectToScreen);\n\n        // Generate screen space end point.\n        const endPoint = vec3.create();\n        vec3.transformMat4(endPoint, segment.p1.value, objectToScreen);\n\n        // Draw the line.\n        this.drawLine(startPoint, endPoint, \"black\", 1);\n      });\n    });\n  }\n\n  drawLine(\n    startPoint: vec3,\n    endPoint: vec3,\n    color: string,\n    lineWidth: number\n  ): void {\n    this.canvasContext.strokeStyle = color;\n    this.canvasContext.lineWidth = lineWidth;\n    this.canvasContext.beginPath();\n    this.canvasContext.moveTo(startPoint[0], startPoint[1]);\n    this.canvasContext.lineTo(endPoint[0], endPoint[1]);\n    this.canvasContext.stroke();\n  }\n}\n", "import { Attributes, System } from \"ecsy/System\";\n\nexport class ClearCanvasSystem extends System {\n  mainCanvas!: HTMLCanvasElement;\n  canvasContext!: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes | undefined): void {\n    this.mainCanvas = attributes?.mainCanvas;\n    this.canvasContext = this.mainCanvas.getContext(\n      \"2d\"\n    ) as CanvasRenderingContext2D;\n  }\n\n  execute(delta: number, time: number): void {\n    this.canvasContext.clearRect(\n      0,\n      0,\n      this.mainCanvas.width,\n      this.mainCanvas.height\n    );\n  }\n}\n", "import { World } from \"ecsy/World\";\nimport { IWorldRegister } from \"../../Utils/IWorldRegister\";\nimport { Canvas3DLineFrameRenderer } from \"./System/BuildInRenderers/Canvas3DLineFrameRenderer\";\nimport { Canvas3DRenderer } from \"./System/Canvas3DRenderer\";\nimport { ClearCanvasSystem } from \"./System/ClearCanvasSystem\";\n\nexport class RenderSystem3DRegister {\n  mainCanvas: HTMLCanvasElement;\n\n  constructor(mainCanvas: HTMLCanvasElement) {\n    this.mainCanvas = mainCanvas;\n  }\n\n  register: IWorldRegister = (world: World) => {\n    world\n      .registerSystem(ClearCanvasSystem, {\n        mainCanvas: this.mainCanvas,\n        priority: -100,\n      })\n      .registerSystem(Canvas3DLineFrameRenderer, {\n        mainCanvas: this.mainCanvas,\n      });\n  };\n}\n", "import { World } from \"ecsy/World\";\nimport { IWorldRegister } from \"../Utils/IWorldRegister\";\n\nexport class EditorSystem3DRegister {\n  mainCanvas: HTMLCanvasElement;\n\n  constructor(mainCanvas: HTMLCanvasElement) {\n    this.mainCanvas = mainCanvas;\n  }\n\n  register: IWorldRegister = (world: World) => {\n    // world.registerSystem(EditorViewPort3DSystem, {\n    //   mainCanvas: this.mainCanvas,\n    // });\n  };\n}\n", "import { TagComponent } from \"ecsy/TagComponent\";\nimport { IComponent } from \"../../Core/ComponentRegistry\";\n\n@IComponent.register\nexport class EditorSceneCamTag extends TagComponent {}\n", "import { Attributes, System, SystemQueries } from \"ecsy/System\";\nimport { MainCameraTag } from \"../../Core/Render/TagComponent/MainCameraTag\";\nimport { EditorSceneCamTag } from \"../TagComponent/EditorSceneCamTag\";\n\nexport class EditorCamTagAppendSystem extends System {\n  static queries: SystemQueries = {\n    mainCamera: {\n      components: [MainCameraTag],\n    },\n  };\n\n  init(attributes?: Attributes | undefined): void {\n    // Check if main camera exists.\n    if (this.queries.mainCamera.results.length === 0) {\n      throw new Error(\"Main camera not found.\");\n    }\n    // Check if there's more than one main camera.\n    else if (this.queries.mainCamera.results.length > 1) {\n      throw new Error(\"More than one main camera found.\");\n    }\n\n    // Append editor camera tag.\n    this.queries.mainCamera.results[0].addComponent(EditorSceneCamTag);\n  }\n\n  execute(delta: number, time: number): void {\n    // Do nothing.\n  }\n}\n", "import { mainWorld } from \"white-dwarf/Core\";\nimport { coreRenderContext } from \"white-dwarf/Core/Context/RenderContext\";\nimport { systemContext } from \"white-dwarf/Core/CoreSetup\";\nimport { TransformData2D } from \"white-dwarf/Core/Locomotion/DataComponent/TransformData2D\";\nimport { TransformData3D } from \"white-dwarf/Core/Locomotion/DataComponent/TransformData3D\";\nimport { CameraData2D } from \"white-dwarf/Core/Render/DataComponent/CameraData2D\";\nimport { LineFrameRenderData3D } from \"white-dwarf/Core/Render/DataComponent/LineFrameRenderData3D\";\nimport { PerspectiveCameraData3D } from \"white-dwarf/Core/Render/DataComponent/PerspectiveCameraData3D\";\nimport { RenderSystem3DRegister } from \"white-dwarf/Core/Render/RenderSystem3DRegister\";\nimport { MainCameraTag } from \"white-dwarf/Core/Render/TagComponent/MainCameraTag\";\nimport { EditorSystem2DRegister } from \"white-dwarf/Editor/EditorSystem2DRegister\";\nimport { EditorSystem3DRegister } from \"white-dwarf/Editor/EditorSystem3DRegister\";\nimport { EditorCamTagAppendSystem } from \"white-dwarf/Editor/System/EditorCamTagAppendSystem\";\nimport { LineFrame3DSegment } from \"white-dwarf/Mathematics/LineFrame3DSegment\";\nimport { Vector3 } from \"white-dwarf/Mathematics/Vector3\";\n\nexport const main = () => {\n  systemContext.coreSetup = () => {\n    if (coreRenderContext.mainCanvas) {\n      new RenderSystem3DRegister(coreRenderContext.mainCanvas).register(\n        mainWorld\n      );\n    }\n  };\n\n  systemContext.editorStart = () => {\n    // Add a editor cam.\n    mainWorld\n      .createEntity(\"Editor Main Camera\")\n      .addComponent(TransformData3D, {\n        position: new Vector3(0, 0, -10),\n      })\n      .addComponent(PerspectiveCameraData3D)\n      .addComponent(MainCameraTag);\n\n    // Add a line segment render entity.\n    mainWorld\n      .createEntity(\"Line Segment Render\")\n      .addComponent(TransformData3D)\n      .addComponent(LineFrameRenderData3D, {\n        segments: [\n          new LineFrame3DSegment(new Vector3(0, 0, 0), new Vector3(1, 0, 0)),\n          new LineFrame3DSegment(new Vector3(0, 0, 0), new Vector3(0, 1, 0)),\n          new LineFrame3DSegment(new Vector3(1, 1, 0), new Vector3(1, 0, 0)),\n          new LineFrame3DSegment(new Vector3(1, 1, 0), new Vector3(0, 1, 0)),\n          new LineFrame3DSegment(new Vector3(0, 0, 1), new Vector3(1, 0, 1)),\n          new LineFrame3DSegment(new Vector3(0, 0, 1), new Vector3(0, 1, 1)),\n          new LineFrame3DSegment(new Vector3(1, 1, 1), new Vector3(1, 0, 1)),\n          new LineFrame3DSegment(new Vector3(1, 1, 1), new Vector3(0, 1, 1)),\n          new LineFrame3DSegment(new Vector3(0, 0, 0), new Vector3(0, 0, 1)),\n          new LineFrame3DSegment(new Vector3(1, 0, 0), new Vector3(1, 0, 1)),\n          new LineFrame3DSegment(new Vector3(0, 1, 0), new Vector3(0, 1, 1)),\n          new LineFrame3DSegment(new Vector3(1, 1, 0), new Vector3(1, 1, 1)),\n        ],\n      });\n\n    // Register Editor System.\n    if (coreRenderContext.mainCanvas) {\n      new EditorSystem3DRegister(coreRenderContext.mainCanvas).register(\n        mainWorld\n      );\n    }\n\n    // Setup editor scene camera.\n    try {\n      mainWorld.registerSystem(EditorCamTagAppendSystem);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n", "import fileDownload from \"js-file-download\";\nimport { mainInit, mainWorld, resetWorld } from \"../Core\";\nimport { coreRenderContext } from \"../Core/Context/RenderContext\";\nimport { coreSetup, systemContext } from \"../Core/CoreSetup\";\nimport {\n  EntitySerializer,\n  IEntityObject,\n} from \"../Core/Serialization/EntitySerializer\";\nimport {\n  IWorldObject,\n  WorldSerializer,\n} from \"../Core/Serialization/WorldSerializer\";\nimport { editorUIContext, editorEventContext } from \"./EditorContext\";\nimport { updateEntityList, addNewEntity } from \"./EditorEntityListManager\";\nimport { updateEntityInspector } from \"./System/EditorInspectorSystem\";\nimport { EditorViewPort2DSystem } from \"./System/EditorViewPort2DSystems\";\n\nlet platState = false;\nlet worldData: IWorldObject | null = null;\n\nexport const editorInit = () => {\n  console.log(\"Editor Started\");\n\n  // Editor initialization.\n\n  coreRenderContext.mainCanvas = document.getElementById(\n    \"mainCanvas\"\n  ) as HTMLCanvasElement;\n  editorUIContext.entityLists = document.getElementsByClassName(\n    \"entityList\"\n  ) as HTMLCollectionOf<HTMLDivElement>;\n  editorUIContext.entityInspector = document.getElementsByClassName(\n    \"entityInspector\"\n  ) as HTMLCollectionOf<HTMLDivElement>;\n  editorUIContext.playButton = document.getElementById(\n    \"playButton\"\n  ) as HTMLButtonElement;\n\n  editorUIContext.entityNameInput = document.getElementById(\n    \"entityName\"\n  ) as HTMLInputElement;\n  editorUIContext.createEntityButton = document.getElementById(\n    \"createEntityButton\"\n  ) as HTMLButtonElement;\n  editorUIContext.deserializeEntityButton = document.getElementById(\n    \"fileInput\"\n  ) as HTMLInputElement;\n\n  editorUIContext.saveWorldButton = document.getElementById(\n    \"saveWorldButton\"\n  ) as HTMLButtonElement;\n  editorUIContext.loadWorldButton = document.getElementById(\n    \"loadWorldButton\"\n  ) as HTMLButtonElement;\n\n  // Disable right click for main canvas.\n  coreRenderContext.mainCanvas.oncontextmenu = () => false;\n\n  // Register main world entity change.\n  mainWorld.onEntityChanged.push(updateEntityList);\n  // Register entity selected event.\n  editorEventContext.onEntitySelected.push(updateEntityInspector);\n\n  // Core setup.\n  coreSetup();\n\n  // Editor start.\n  systemContext.editorStart();\n\n  // Setup play button.\n  setupPlayButton();\n\n  // Setup create entity button.\n  setupCreateEntityButton();\n\n  // Setup deserialize entity input.\n  setupDeserializeEntityInput();\n\n  // Setup save and load world button.\n  setupSaveLoadWorldButton();\n\n  // White Dwarf Engine initialization.\n  mainInit();\n\n  // Resize .\n  onResize();\n};\nconst onResize = () => {\n  // Resize mainCanvas.\n  if (coreRenderContext.mainCanvas) {\n    coreRenderContext.mainCanvas.width =\n      coreRenderContext.mainCanvas.clientWidth;\n    coreRenderContext.mainCanvas.height =\n      coreRenderContext.mainCanvas.clientHeight;\n  }\n};\n\nconst setupPlayButton = () => {\n  editorUIContext.playButton?.addEventListener(\"click\", async () => {\n    if (!platState) {\n      if (editorUIContext.playButton) {\n        editorUIContext.playButton.innerHTML = \"Stop\";\n      }\n\n      await editorPlay();\n\n      platState = true;\n    } else {\n      if (editorUIContext.playButton) {\n        editorUIContext.playButton.innerHTML = \"Play\";\n      }\n\n      editorStop();\n\n      platState = false;\n    }\n  });\n};\n\nconst setupCreateEntityButton = () => {\n  editorUIContext.createEntityButton?.addEventListener(\"click\", () => {\n    // Check if there's a target deserialize entity input.\n    if (editorUIContext.entityNameInput) {\n      addNewEntity(editorUIContext.entityNameInput.value);\n      editorUIContext.entityNameInput.value = \"\";\n    } else {\n      addNewEntity();\n    }\n  });\n};\n\nconst setupDeserializeEntityInput = () => {\n  editorUIContext.deserializeEntityButton?.addEventListener(\"click\", () => {\n    let input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (e) => {\n      // Read the entity data.\n      const file = (e.target as HTMLInputElement).files?.[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = e.target?.result;\n          if (data) {\n            const entityData = JSON.parse(data as string) as IEntityObject;\n            EntitySerializer.deserializeEntity(mainWorld, entityData);\n          }\n        };\n        reader.readAsText(file);\n      }\n    };\n    input.click();\n  });\n};\n\nconst setupSaveLoadWorldButton = () => {\n  editorUIContext.saveWorldButton?.addEventListener(\"click\", () => {\n    const worldObject = WorldSerializer.serializeWorld(mainWorld);\n    fileDownload(JSON.stringify(worldObject, null, 2), \"world.json\");\n  });\n\n  editorUIContext.loadWorldButton?.addEventListener(\"click\", () => {\n    let input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (e) => {\n      // Read the entity data.\n      const file = (e.target as HTMLInputElement).files?.[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = e.target?.result;\n          if (data) {\n            worldData = JSON.parse(data as string) as IWorldObject;\n\n            // Clear the world.\n            editorStop();\n          }\n        };\n        reader.readAsText(file);\n      }\n    };\n    input.click();\n  });\n};\n\nconst editorPlay = async () => {\n  // Serialize the world.\n  worldData = WorldSerializer.serializeWorld(mainWorld);\n\n  // Reset the main world.\n  resetWorld();\n\n  // Register main world entity change.\n  mainWorld.onEntityChanged.push(updateEntityList);\n\n  // Call release init.\n  // Setup core.\n  coreSetup();\n\n  await systemContext.coreStart({\n    worldObject: worldData,\n  });\n\n  // Start white dwarf.\n  mainInit();\n};\n\nconst editorStop = () => {\n  // Reset the main world.\n  resetWorld();\n\n  // Register main world entity change.\n  mainWorld.onEntityChanged.push(updateEntityList);\n\n  // Call editor init.// Core setup.\n  coreSetup();\n\n  // Editor start.\n  systemContext.editorStart();\n\n  // If there's world data, deserialize it.\n  if (worldData) {\n    WorldSerializer.deserializeWorld(mainWorld, worldData);\n  }\n\n  // White Dwarf Engine initialization.\n  mainInit();\n};\n\nwindow.onload = editorInit;\nwindow.onresize = onResize;\n", "import { TagComponent } from \"ecsy/TagComponent\";\nimport { IComponent } from \"../../Core/ComponentRegistry\";\n\n@IComponent.register\nexport class EditorSelectedTag extends TagComponent {}\n", "import { Component, ComponentSchema } from \"ecsy/Component\";\nimport { Entity } from \"ecsy/Entity\";\nimport { Types } from \"ecsy/Types\";\nimport { World } from \"ecsy/World\";\nimport { EditorSelectedTag } from \"../../Editor/TagComponent/EditorSelectedTag\";\nimport { IComponent } from \"../ComponentRegistry\";\n\nexport interface IEntityObject {\n  name: string;\n  id: number;\n  components: { [key: string]: any };\n}\n\nexport interface IComponentObject {\n  type: string;\n  data: any;\n}\n\n/**\n * This is a helper class for serializing and deserializing entities.\n */\nexport class EntitySerializer {\n  // The current deserialized entity data.\n  public entityData: IEntityObject | null = null;\n\n  /**\n   * Serialize an entity to a JSON object.\n   *\n   * @param component The component to serialize.\n   * @returns json object representation of the component.\n   */\n  public static serializeComponent(\n    component: Component<any>\n  ): IComponentObject {\n    const componentObject: IComponentObject = {\n      type: component.constructor.name,\n      data: {},\n    };\n\n    const componentSchema = Object.getPrototypeOf(component).constructor\n      .schema as ComponentSchema;\n\n    const componentDataContent: { [key: string]: any } = {};\n    Object.keys(component).forEach((key) => {\n      if (\n        Object.keys(componentSchema).includes(key) &&\n        componentSchema[key].type !== Types.Ref\n      ) {\n        componentDataContent[key] = component[key as keyof typeof component];\n      }\n    });\n\n    componentObject.data = componentDataContent;\n\n    return componentObject;\n  }\n\n  /**\n   * Serialize an entity to a JSON object.\n   *\n   * @param entity The entity to serialize.\n   * @returns json object representation of the entity.\n   */\n  public static serializeEntity(entity: Entity): IEntityObject {\n    const entityObject: IEntityObject = {\n      name: entity.name,\n      id: entity.id,\n      components: {},\n    };\n\n    // Get all components of entity.\n    const components = entity.getComponents();\n    const componentIndices = Object.keys(components);\n\n    // Add components data.\n    for (let j = 0; j < componentIndices.length; j++) {\n      const componentIndex = componentIndices[j];\n      const component = components[componentIndex];\n\n      // Skip EditorSelectedTag.\n      if (component.constructor.name === EditorSelectedTag.name) {\n        continue;\n      }\n\n      const componentObject = EntitySerializer.serializeComponent(component);\n\n      entityObject.components[componentObject.type] = componentObject.data;\n    }\n\n    return entityObject;\n  }\n  /**\n   * Add new entity to world from entity data.\n   *\n   * @param entityData The entity data to add.\n   * @param reserveId Whether to reserve the id of the entity, defaults to false.\n   */\n  public static deserializeEntity(\n    world: World,\n    entityData: IEntityObject,\n    reserveId: boolean = false\n  ) {\n    // Check if entity already exists.\n    const entity = world.getEntityById(entityData.id);\n    if (reserveId && entity && entity.alive) {\n      console.warn(\n        `Entity with id ${entityData.id} already exists. Skipping deserialization.`\n      );\n      return;\n    }\n\n    // Create new entity.\n    let newEntity;\n    if (reserveId) {\n      newEntity = world.createEntity(entityData.name, entityData.id);\n    } else {\n      newEntity = world.createEntity(entityData.name);\n    }\n\n    // Add components.\n    for (const componentName in entityData.components) {\n      const componentData = entityData.components[componentName];\n      // Add component.\n      const componentList = IComponent.getImplementations();\n      // Get the component with the name.\n      let component = componentList.find(\n        (component) => component.name === componentName\n      );\n      if (component) {\n        // Add component to entity.\n        newEntity.addComponent(component, componentData);\n      } else {\n        console.error(\"Component not found.\");\n      }\n    }\n  }\n}\n", "import { World } from \"ecsy/World\";\nimport { EditorSceneCamTag } from \"../../Editor/TagComponent/EditorSceneCamTag\";\nimport { EntitySerializer, IEntityObject } from \"./EntitySerializer\";\n\n// TODO: Add system serialization here.\nexport interface IWorldObject {\n  entities: IEntityObject[];\n}\n\n/**\n * This is a helper class for serializing and deserializing worlds.\n */\nexport class WorldSerializer {\n  /**\n   * Serialize a world to a JSON object.\n   *\n   * @param world The world to serialize.\n   * @returns IWorldObject containing all the serialized entities.\n   */\n  public static serializeWorld(world: World): IWorldObject {\n    const worldObject: IWorldObject = {\n      entities: [],\n    };\n\n    world.getAllEntities().forEach((entity) => {\n      // Filter out editor camera.\n      if (entity.hasComponent(EditorSceneCamTag)) {\n        return;\n      }\n\n      worldObject.entities.push(EntitySerializer.serializeEntity(entity));\n    });\n\n    return worldObject;\n  }\n\n  public static deserializeWorld(world: World, worldObject: IWorldObject) {\n    worldObject.entities.forEach((entityObject) => {\n      EntitySerializer.deserializeEntity(world, entityObject);\n    });\n  }\n}\n", "import { Entity } from \"ecsy/Entity\";\n\nexport interface IEditorUIContext {\n  entityLists: HTMLCollectionOf<HTMLDivElement> | null;\n  entityInspector: HTMLCollectionOf<HTMLDivElement> | null;\n\n  playButton: HTMLButtonElement | null;\n\n  entityNameInput: HTMLInputElement | null;\n  createEntityButton: HTMLButtonElement | null;\n  deserializeEntityButton: HTMLInputElement | null;\n\n  saveWorldButton: HTMLButtonElement | null;\n  loadWorldButton: HTMLButtonElement | null;\n}\n\nexport interface IEditorEventContext {\n  onEntitySelected: Array<(entity: Entity) => void>;\n}\n\nexport const editorUIContext: IEditorUIContext = {\n  entityLists: null,\n  entityInspector: null,\n  playButton: null,\n  entityNameInput: null,\n  createEntityButton: null,\n  deserializeEntityButton: null,\n  saveWorldButton: null,\n  loadWorldButton: null,\n};\n\nexport const editorEventContext: IEditorEventContext = {\n  onEntitySelected: [],\n};\n", "import { Entity } from \"ecsy/Entity\";\nimport { mainWorld } from \"../Core\";\nimport { editorEventContext, editorUIContext } from \"./EditorContext\";\n\nexport const updateEntityList = (entities: Array<Entity>) => {\n  if (!editorUIContext.entityLists) {\n    return;\n  }\n\n  // Traverse all entityLists.\n  for (let i = 0; i < editorUIContext.entityLists.length; i++) {\n    const entityList = editorUIContext.entityLists[i];\n    // Remove all children.\n    while (entityList.firstChild) {\n      entityList.removeChild(entityList.firstChild);\n    }\n    // Add new children.\n    for (let j = 0; j < entities.length; j++) {\n      const entity = entities[j];\n      const entityDiv = document.createElement(\"div\");\n\n      // Add entity name.\n      const entityName = document.createElement(\"span\");\n      entityName.innerText = entity.name === \"\" ? \"Entity\" : entity.name;\n      entityDiv.appendChild(entityName);\n\n      // Add entity id.\n      const entityId = document.createElement(\"span\");\n      entityId.innerText = entity.id.toString();\n      entityDiv.appendChild(entityId);\n\n      // Set hover style.\n      entityDiv.style.cursor = \"pointer\";\n\n      // Add entity select button.\n      entityDiv.className = \"entityListItem\";\n      entityList.appendChild(entityDiv);\n\n      // Add select behavior.\n      entityDiv.onclick = () => {\n        // Invoke all onEntitySelected callbacks.\n        editorEventContext.onEntitySelected.forEach((callback) => {\n          callback(entity);\n        });\n      };\n    }\n  }\n};\n\nexport const addNewEntity = (entityName?: string) => {\n  // Add new entity to entity list.\n  mainWorld.createEntity(entityName);\n};\n", "import { COMPONENT_CHANGE_EVENT } from \"ecsy/Component\";\nimport { Entity } from \"ecsy/Entity\";\nimport fileDownload from \"js-file-download\";\nimport { IComponent } from \"../../Core/ComponentRegistry\";\nimport { TransformData2D } from \"../../Core/Locomotion/DataComponent/TransformData2D\";\nimport { TransformData3D } from \"../../Core/Locomotion/DataComponent/TransformData3D\";\nimport { EntitySerializer } from \"../../Core/Serialization/EntitySerializer\";\nimport { editorUIContext } from \"../EditorContext\";\nimport { EditorSelectedTag } from \"../TagComponent/EditorSelectedTag\";\nimport { EditorViewPort2DSystem } from \"./EditorViewPort2DSystems\";\n\nexport const updateEntityInspector = (entity: Entity | null) => {\n  // Removed the EditorSelectedTag from the previous entity.\n  if (EditorViewPort2DSystem.inspectEntity) {\n    EditorViewPort2DSystem.inspectEntity.removeComponent(EditorSelectedTag);\n  }\n\n  EditorViewPort2DSystem.inspectEntity = entity;\n\n  // Add the EditorSelectedTag to the new entity.\n  if (EditorViewPort2DSystem.inspectEntity) {\n    EditorViewPort2DSystem.inspectEntity.addComponent(EditorSelectedTag);\n  }\n\n  // Check if the inspectEntity has Transform component.\n  if (entity?.hasComponent(TransformData2D)) {\n    EditorViewPort2DSystem.inspectTransform = entity.getComponent(\n      TransformData2D\n    ) as Readonly<TransformData2D>;\n  } else if (entity?.hasComponent(TransformData3D)) {\n    // TODO: Set 3d view port inspect transform.\n  } else {\n    EditorViewPort2DSystem.inspectTransform = null;\n    // TODO: Reset 3d view port inspect transform.\n  }\n\n  displayEntityInspector(entity);\n};\n\nexport const displayEntityInspector = (entity: Entity | null) => {\n  if (!editorUIContext.entityInspector) {\n    return;\n  }\n\n  if (entity === null) {\n    // Traverse all entityInspectors.\n    for (let i = 0; i < editorUIContext.entityInspector.length; i++) {\n      const entityInspector = editorUIContext.entityInspector[i];\n      // Remove all children.\n      while (entityInspector.firstChild) {\n        entityInspector.removeChild(entityInspector.firstChild);\n      }\n    }\n\n    return;\n  }\n\n  // Get all components of entity.\n  const components = entity.getComponents();\n  const componentIndices = Object.keys(components);\n\n  // Traverse all entityInspectors.\n  for (let i = 0; i < editorUIContext.entityInspector.length; i++) {\n    const entityInspector = editorUIContext.entityInspector[i];\n    // Remove all children.\n    while (entityInspector.firstChild) {\n      entityInspector.removeChild(entityInspector.firstChild);\n    }\n\n    // Entity operations\n    const entityOperationDiv = document.createElement(\"div\");\n    entityOperationDiv.className = \"componentListItem\";\n\n    // Add remove entity button.\n    addRemoveEntityButton(entity, entityOperationDiv);\n    // Add serialize entity button.\n    addSerializeEntityButton(entity, entityOperationDiv);\n\n    entityInspector.appendChild(entityOperationDiv);\n\n    // Add components data.\n    for (let j = 0; j < componentIndices.length; j++) {\n      const componentIndex = componentIndices[j];\n      const component = components[componentIndex];\n\n      const componentObject = EntitySerializer.serializeComponent(component);\n\n      // Add component name.\n      const componentDiv = document.createElement(\"div\");\n      // Set css class.\n      componentDiv.className = \"componentListItem\";\n\n      const componentTitle = document.createElement(\"h3\");\n      componentTitle.innerText = componentObject.type;\n      componentDiv.appendChild(componentTitle);\n\n      // Custom inspector here.\n      if (component.onInspector) {\n        component.onInspector(componentDiv);\n      }\n\n      // Add a spacer.\n      const spacer = document.createElement(\"div\");\n      spacer.style.height = \"10px\";\n      componentDiv.appendChild(spacer);\n\n      // Default inspector here.\n      if (!component.onInspector || component.useDefaultInspector) {\n        const componentData = document.createElement(\"span\");\n        componentData.className = \"textarea\";\n        componentData.contentEditable = \"true\";\n        componentData.textContent = JSON.stringify(\n          componentObject.data,\n          null,\n          2\n        );\n        componentData.style.whiteSpace = \"pre-wrap\";\n        componentData.style.resize = \"none\";\n        componentDiv.appendChild(componentData);\n\n        // When component data is changed.\n        componentData.addEventListener(\"input\", (event) => {\n          const target = event.target as HTMLTextAreaElement;\n          try {\n            const newComponentData = JSON.parse(target.textContent || \"{}\");\n            component.copy(newComponentData);\n            // Call change event.\n            entity.getMutableComponent(\n              Object.getPrototypeOf(component).constructor\n            );\n          } catch (error) {\n            console.error(error);\n            return;\n          }\n        });\n\n        // When component data is changed.\n        component.eventEmitter.on(COMPONENT_CHANGE_EVENT, (component) => {\n          const componentObject =\n            EntitySerializer.serializeComponent(component);\n          // Check if the componentData box is focused.\n          if (document.activeElement !== componentData) {\n            componentData.textContent = JSON.stringify(\n              componentObject.data,\n              null,\n              2\n            );\n          }\n        });\n      }\n\n      // Add a remove button.\n      const removeButton = document.createElement(\"button\");\n      removeButton.innerText = \"Remove\";\n      removeButton.onclick = () => {\n        // Remove component.\n        entity.removeComponent(Object.getPrototypeOf(component).constructor);\n        // Update entity inspector.\n        updateEntityInspector(entity);\n      };\n      componentDiv.appendChild(removeButton);\n\n      // Add component to entityInspector.\n      entityInspector.appendChild(componentDiv);\n    }\n\n    // Add component feature.\n    addComponentButton(entity, entityInspector);\n  }\n};\n\nfunction addSerializeEntityButton(\n  entity: Entity,\n  entityOperationDiv: HTMLDivElement\n) {\n  const serializeEntityButton = document.createElement(\"button\");\n  serializeEntityButton.innerText = \"Serialize Entity\";\n  serializeEntityButton.style.width = \"100%\";\n  serializeEntityButton.onclick = () => {\n    const serializedEntity = EntitySerializer.serializeEntity(entity);\n    fileDownload(JSON.stringify(serializedEntity, null, 2), \"entity.json\");\n  };\n  entityOperationDiv.appendChild(serializeEntityButton);\n}\n\n/**\n * Add a new component to entity.\n *\n * @param entity the entity to add component to.\n * @param entityInspector the entity inspector to add component button to.\n */\nfunction addComponentButton(entity: Entity, entityInspector: HTMLDivElement) {\n  const componentAddDiv = document.createElement(\"div\");\n  componentAddDiv.className = \"componentListItem\";\n\n  const componentNameInput = document.createElement(\"select\");\n  const componentList = IComponent.getImplementations();\n  const componentNames = componentList.map((component) => component.name);\n  for (let j = 0; j < componentNames.length; j++) {\n    const componentName = componentNames[j];\n    const option = document.createElement(\"option\");\n    option.value = componentName;\n    option.innerText = componentName;\n    componentNameInput.appendChild(option);\n  }\n  componentAddDiv.appendChild(componentNameInput);\n\n  // Add \"Add Component\" button.\n  const addComponentButton = document.createElement(\"button\");\n  addComponentButton.style.width = \"100%\";\n  addComponentButton.innerText = \"Add Component\";\n  addComponentButton.onclick = () => {\n    // Add component.\n    const componentList = IComponent.getImplementations();\n    // Get the component with the name.\n    let component = componentList.find(\n      (component) => component.name === componentNameInput.value\n    );\n    if (component) {\n      // Add component to entity.\n      entity.addComponent(component);\n      updateEntityInspector(entity);\n    } else {\n      console.error(\"Component not found.\");\n    }\n  };\n  componentAddDiv.appendChild(addComponentButton);\n\n  entityInspector.appendChild(componentAddDiv);\n}\n\n/**\n * Remove the entity.\n *\n * @param entity the entity to remove.\n * @param entityOperationDiv the entity operation div to add remove button to.\n */\nfunction addRemoveEntityButton(\n  entity: Entity,\n  entityOperationDiv: HTMLDivElement\n) {\n  const removeEntityButton = document.createElement(\"button\");\n  removeEntityButton.innerText = \"Remove Entity\";\n  removeEntityButton.style.width = \"100%\";\n  removeEntityButton.onclick = () => {\n    // Remove entity.\n    entity.remove();\n    // Update entity inspector.\n    updateEntityInspector(null);\n  };\n\n  entityOperationDiv.appendChild(removeEntityButton);\n}\n", "import { cloneClonable, copyCopyable, createType } from \"ecsy/Types\";\nimport { vec2 } from \"gl-matrix\";\n\n/**\n * Wrapper for glmatrix vec2.\n *\n * @export\n * @class Vector2\n */\nexport class Vector2 {\n  value: vec2;\n\n  /**\n   * Creates an instance of Vector2.\n   * @param {number} x the x component of the vector.\n   * @param {number} y the y component of the vector.\n   * @memberof Vector2\n   */\n  constructor(x: number, y: number) {\n    this.value = vec2.fromValues(x, y);\n  }\n\n  set(x: number, y: number) {\n    vec2.set(this.value, x, y);\n  }\n\n  copy(v: Vector2): Vector2 {\n    this.value = vec2.copy(this.value, v.value);\n    return this;\n  }\n\n  clone(): Vector2 {\n    return new Vector2(this.value[0], this.value[1]);\n  }\n}\n\nexport const Vector2Type = createType({\n  name: \"Vector2\",\n  default: new Vector2(0, 0),\n  copy: copyCopyable<Vector2>,\n  clone: cloneClonable<Vector2>,\n});\n\nexport const Vector2CustomEditor = (\n  value: Vector2,\n  onChange: (value: Vector2) => void\n): [HTMLDivElement, (v: Vector2) => void] => {\n  const vector2Div = document.createElement(\"div\");\n  vector2Div.style.display = \"flex\";\n  vector2Div.style.flexDirection = \"row\";\n\n  const xLabel = document.createElement(\"label\");\n  xLabel.innerText = \"X\";\n  vector2Div.appendChild(xLabel);\n  const xInput = document.createElement(\"input\");\n  xInput.type = \"number\";\n  xInput.style.minWidth = \"0px\";\n  xInput.style.flexGrow = \"1\";\n  xInput.value = value.value[0].toString();\n  vector2Div.appendChild(xInput);\n\n  const yLabel = document.createElement(\"label\");\n  yLabel.innerText = \"Y\";\n  vector2Div.appendChild(yLabel);\n  const yInput = document.createElement(\"input\");\n  yInput.type = \"number\";\n  yInput.style.minWidth = \"0px\";\n  yInput.style.flexGrow = \"1\";\n  yInput.value = value.value[1].toString();\n  vector2Div.appendChild(yInput);\n\n  const update = () => {\n    onChange(new Vector2(parseFloat(xInput.value), parseFloat(yInput.value)));\n  };\n\n  const setVector2 = (v: Vector2) => {\n    // If the value is focused, don't update it.\n    if (\n      document.activeElement === xInput ||\n      document.activeElement === yInput\n    ) {\n      return;\n    }\n\n    xInput.value = v.value[0].toString();\n    yInput.value = v.value[1].toString();\n  };\n\n  xInput.onchange = update;\n  yInput.onchange = update;\n\n  return [vector2Div, setVector2];\n};\n", "import {\n  Component,\n  ComponentSchema,\n  COMPONENT_CHANGE_EVENT,\n} from \"ecsy/Component\";\nimport { Types } from \"ecsy/Types\";\nimport {\n  Vector2,\n  Vector2CustomEditor,\n  Vector2Type,\n} from \"../../../Mathematics/Vector2\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\n@IComponent.register\nexport class TransformData2D extends Component<TransformData2D> {\n  static schema: ComponentSchema = {\n    position: {\n      type: Vector2Type,\n      default: new Vector2(0, 0),\n    },\n    rotation: {\n      type: Types.Number,\n      default: 0,\n    },\n    scale: {\n      type: Vector2Type,\n      default: new Vector2(1, 1),\n    },\n  };\n\n  position!: Vector2;\n  rotation!: number;\n  scale!: Vector2;\n\n  public useDefaultInspector: boolean = false;\n\n  public onInspector = (componentDiv: HTMLDivElement) => {\n    const transformDiv = document.createElement(\"div\");\n\n    // Position editor.\n    const positionDiv = document.createElement(\"div\");\n    // Position title.\n    positionDiv.appendChild(document.createTextNode(\"Position\"));\n    // Position Vector2 editor.\n    const [positionVector2Div, setPosition] = Vector2CustomEditor(\n      this.position,\n      (newValue) => {\n        this.position = newValue;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      }\n    );\n    positionDiv.appendChild(positionVector2Div);\n\n    // Rotation editor.\n    const rotationDiv = document.createElement(\"div\");\n    // Rotation title.\n    rotationDiv.appendChild(document.createTextNode(\"Rotation\"));\n    // Rotation input.\n    const rotationInput = document.createElement(\"input\");\n    rotationInput.type = \"number\";\n    rotationInput.style.minWidth = \"0px\";\n    rotationInput.style.width = \"100%\";\n    rotationInput.value = this.rotation.toString();\n    rotationInput.onchange = (event) => {\n      this.rotation = parseFloat((event.target as HTMLInputElement).value);\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n    };\n    rotationDiv.appendChild(rotationInput);\n\n    // Scale editor.\n    const scaleDiv = document.createElement(\"div\");\n    // Scale title.\n    scaleDiv.appendChild(document.createTextNode(\"Scale\"));\n    // Scale Vector2 editor.\n    const [scaleVector2Div, setScale] = Vector2CustomEditor(\n      this.scale,\n      (newValue) => {\n        this.scale = newValue;\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\n      }\n    );\n    scaleDiv.appendChild(scaleVector2Div);\n\n    componentDiv.appendChild(positionDiv);\n    componentDiv.appendChild(rotationDiv);\n    componentDiv.appendChild(scaleDiv);\n\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, (component) => {\n      setPosition(component.position);\n      // Modify the rotation input value if it's not focused.\n      if (document.activeElement !== rotationInput) {\n        rotationInput.value = component.rotation.toString();\n      }\n      setScale(component.scale);\n    });\n\n    componentDiv.appendChild(transformDiv);\n  };\n}\n", "import { Component, ComponentSchema } from \"ecsy/Component\";\nimport { Types } from \"ecsy/Types\";\nimport { IComponent } from \"../../ComponentRegistry\";\n\nexport enum BackgroundType {\n  Color = 0,\n  Texture = 1,\n}\n\n@IComponent.register\nexport class CameraData2D extends Component<CameraData2D> {\n  static schema: ComponentSchema = {\n    backgroundType: {\n      type: Types.Number,\n      default: BackgroundType.Color,\n    },\n    backgroundColor: {\n      type: Types.String,\n      default: \"#000000\",\n    },\n    backgroundTexture: {\n      type: Types.String,\n      default: \"\",\n    },\n  };\n\n  backgroundType!: BackgroundType;\n\n  backgroundColor!: string;\n  backgroundTexture!: string;\n}\n", "import { Attributes, System, SystemQueries } from \"ecsy/System\";\nimport { mat3, vec2 } from \"gl-matrix\";\nimport { TransformData2D } from \"../../Locomotion/DataComponent/TransformData2D\";\nimport { CameraData2D } from \"../DataComponent/CameraData2D\";\nimport { MainCameraTag } from \"../TagComponent/MainCameraTag\";\n\n/**\n * Base class for canvas renderers.\n */\nexport class Canvas2DRenderer extends System {\n  static queries: SystemQueries = {\n    mainCamera: {\n      components: [MainCameraTag, CameraData2D, TransformData2D],\n    },\n  };\n\n  mainCanvas!: HTMLCanvasElement;\n  canvasContext!: CanvasRenderingContext2D;\n\n  init(attributes?: Attributes | undefined): void {\n    this.mainCanvas = attributes?.mainCanvas;\n    this.canvasContext = this.mainCanvas.getContext(\n      \"2d\"\n    ) as CanvasRenderingContext2D;\n  }\n\n  execute(delta: number, time: number): void {\n    // Check if main camera exists.\n    if (this.queries.mainCamera.results.length === 0) {\n      throw new Error(\"Main camera not found.\");\n    }\n    // Check if there's more than one main camera.\n    else if (this.queries.mainCamera.results.length > 1) {\n      throw new Error(\"More than one main camera found.\");\n    }\n  }\n\n  /**\n   * Construct a transform matrix from world position to camera space.\n   *\n   * @param camTransform The transform of the camera.\n   * @param canvasSize the size of the canvas in vector2.\n   */\n  worldToCamera(camTransform: TransformData2D, canvasSize: vec2): mat3 {\n    // Construct world to camera matrix.\n    const worldToCamera = mat3.create();\n    // Center the camera.\n    mat3.fromTranslation(\n      worldToCamera,\n      vec2.fromValues(canvasSize[0] / 2, canvasSize[1] / 2)\n    );\n    mat3.scale(worldToCamera, worldToCamera, camTransform.scale.value);\n    mat3.translate(\n      worldToCamera,\n      worldToCamera,\n      vec2.negate(vec2.create(), camTransform.position.value)\n    );\n    mat3.rotate(worldToCamera, worldToCamera, camTransform.rotation);\n\n    return worldToCamera;\n  }\n\n  /**\n   * Construct a transform matrix from object space to world space.\n   *\n   * @param objTransform\n   */\n  objectToWorld(objTransform: TransformData2D): mat3 {\n    // TODO: Convert local transform to world transform.\n    // Construct entity to world matrix.\n    const objectToWorld = mat3.create();\n    mat3.fromTranslation(objectToWorld, objTransform.position.value);\n    mat3.rotate(objectToWorld, objectToWorld, objTransform.rotation);\n    mat3.scale(objectToWorld, objectToWorld, objTransform.scale.value);\n\n    return objectToWorld;\n  }\n}\n", "import { COMPONENT_CHANGE_EVENT } from \"ecsy/Component\";\nimport { Entity } from \"ecsy/Entity\";\nimport { Attributes, System, SystemQueries } from \"ecsy/System\";\nimport { mat3, vec2 } from \"gl-matrix\";\nimport fileDownload from \"js-file-download\";\nimport { IComponent } from \"../../Core/ComponentRegistry\";\nimport { TransformData2D } from \"../../Core/Locomotion/DataComponent/TransformData2D\";\nimport { Canvas2DRenderer } from \"../../Core/Render/System/Canvas2DRenderer\";\nimport { EntitySerializer } from \"../../Core/Serialization/EntitySerializer\";\nimport { Vector2 } from \"../../Mathematics/Vector2\";\nimport { editorUIContext } from \"../EditorContext\";\nimport { EditorSceneCamTag } from \"../TagComponent/EditorSceneCamTag\";\nimport { EditorSelectedTag } from \"../TagComponent/EditorSelectedTag\";\nimport { updateEntityInspector } from \"./EditorInspectorSystem\";\n\nconst highlightThreshold = 25;\nconst axisLength = 50;\n\n// TODO: Split all inspector operations into ECS based systems.\nexport class EditorViewPort2DSystem extends Canvas2DRenderer {\n  static inspectEntity: Entity | null = null;\n  static inspectTransform: Readonly<TransformData2D> | null = null;\n\n  static queries: SystemQueries = {\n    ...this.queries,\n    highlightEntity: {\n      components: [TransformData2D],\n    },\n  };\n\n  highlightEntity: Entity | null = null;\n\n  init(attributes?: Attributes | undefined): void {\n    super.init(attributes);\n\n    // Register mouse move event for main canvas.\n    this.mainCanvas.addEventListener(\"mousemove\", (event) => {\n      const mousePos = this.getMousePos(event);\n\n      // If left mouse button is pressed, move the entity.\n      if (event.buttons === 1) {\n        const mouseWorldPos = this.screenToWorld(mousePos);\n\n        if (EditorViewPort2DSystem.inspectEntity) {\n          const transform =\n            EditorViewPort2DSystem.inspectEntity.getMutableComponent(\n              TransformData2D\n            ) as TransformData2D;\n\n          transform.position = new Vector2(mouseWorldPos[0], mouseWorldPos[1]);\n\n          // Update the transform component.\n          EditorViewPort2DSystem.inspectEntity.getMutableComponent(\n            TransformData2D\n          );\n        }\n      } else {\n        // Pick the closest entity and highlight it.\n        let closestEntity: Entity | null = null;\n        let closestDistance = Number.MAX_VALUE;\n\n        // Find the closest entity.\n        this.queries.highlightEntity.results.forEach((entity) => {\n          const transform = entity.getComponent(\n            TransformData2D\n          ) as TransformData2D;\n          const distance = vec2.distance(\n            mousePos,\n            this.worldToScreen(transform.position.value)\n          );\n\n          if (\n            distance < highlightThreshold &&\n            distance < closestDistance &&\n            !entity.hasComponent(EditorSceneCamTag)\n          ) {\n            closestEntity = entity;\n            closestDistance = distance;\n          }\n        });\n\n        // Set the highlight entity.\n        this.highlightEntity = closestEntity;\n      }\n    });\n\n    // Register left mouse down.\n    this.mainCanvas.addEventListener(\"mousedown\", (event) => {\n      if (event.button === 0) {\n        if (this.highlightEntity) {\n          // Select the entity.\n          updateEntityInspector(this.highlightEntity);\n        } else {\n          // Clear the entity inspector.\n          updateEntityInspector(null);\n        }\n      }\n    });\n  }\n\n  execute(delta: number, time: number): void {\n    try {\n      super.execute(delta, time);\n    } catch (error) {\n      console.warn(error);\n      return;\n    }\n\n    // Draw transform and enable selection here.\n\n    // Get the camera transform.\n    const cameraTransform = this.queries.mainCamera.results[0].getComponent(\n      TransformData2D\n    ) as TransformData2D;\n    // Get the canvas size.\n    const canvasSize = vec2.fromValues(\n      this.mainCanvas.width,\n      this.mainCanvas.height\n    );\n\n    // Construct world to camera matrix.\n    const worldToCamera = mat3.create();\n    mat3.multiply(\n      worldToCamera,\n      worldToCamera,\n      this.worldToCamera(cameraTransform, canvasSize)\n    );\n\n    // Draw selected entity.\n    if (EditorViewPort2DSystem.inspectTransform) {\n      // Construct object to camera matrix.\n      const inspectObjToCamera = mat3.create();\n      mat3.multiply(\n        inspectObjToCamera,\n        worldToCamera,\n        this.objectToWorld(EditorViewPort2DSystem.inspectTransform)\n      );\n\n      this.drawAxis(inspectObjToCamera);\n    }\n\n    // Draw highlight.\n    if (this.highlightEntity) {\n      const transform = this.highlightEntity.getComponent(\n        TransformData2D\n      ) as TransformData2D;\n\n      const highlightObjToCamera = mat3.create();\n      mat3.multiply(\n        highlightObjToCamera,\n        worldToCamera,\n        this.objectToWorld(transform)\n      );\n\n      this.drawHighlight(highlightObjToCamera);\n    }\n  }\n\n  /**\n   * Get the mouse position in screen space.\n   *\n   * @param event canvas mouse event.\n   * @returns mouse position in screen space.\n   */\n  getMousePos(event: MouseEvent): vec2 {\n    const rect = this.mainCanvas.getBoundingClientRect();\n    return vec2.fromValues(event.clientX - rect.left, event.clientY - rect.top);\n  }\n\n  /**\n   * Convert screen space to world space.\n   *\n   * @param screenPos screen position.\n   * @returns world position.\n   */\n  screenToWorld(screenPos: vec2): vec2 {\n    // Check if main camera exists.\n    if (this.queries.mainCamera.results.length === 0) {\n      throw new Error(\"Main camera not found.\");\n    }\n    // Check if there's more than one main camera.\n    else if (this.queries.mainCamera.results.length > 1) {\n      throw new Error(\"More than one main camera found.\");\n    }\n\n    const cameraTransform = this.queries.mainCamera.results[0].getComponent(\n      TransformData2D\n    ) as TransformData2D;\n    const canvasSize = vec2.fromValues(\n      this.mainCanvas.width,\n      this.mainCanvas.height\n    );\n\n    const worldPos = vec2.create();\n    vec2.transformMat3(\n      worldPos,\n      screenPos,\n      mat3.invert(\n        mat3.create(),\n        this.worldToCamera(cameraTransform, canvasSize)\n      )\n    );\n\n    return worldPos;\n  }\n\n  /**\n   * Convert world space to screen space.\n   *\n   * @param worldPos world position.\n   * @returns screen position.\n   */\n  worldToScreen(worldPos: vec2): vec2 {\n    // Check if main camera exists.\n    if (this.queries.mainCamera.results.length === 0) {\n      throw new Error(\"Main camera not found.\");\n    }\n    // Check if there's more than one main camera.\n    else if (this.queries.mainCamera.results.length > 1) {\n      throw new Error(\"More than one main camera found.\");\n    }\n\n    const cameraTransform = this.queries.mainCamera.results[0].getComponent(\n      TransformData2D\n    ) as TransformData2D;\n    const canvasSize = vec2.fromValues(\n      this.mainCanvas.width,\n      this.mainCanvas.height\n    );\n\n    const screenPos = vec2.create();\n    vec2.transformMat3(\n      screenPos,\n      worldPos,\n      this.worldToCamera(cameraTransform, canvasSize)\n    );\n\n    return screenPos;\n  }\n\n  drawAxis(inspectObjToCamera: mat3): void {\n    // Get the starting position.\n    const startPos = vec2.fromValues(0, 0);\n    vec2.transformMat3(startPos, startPos, inspectObjToCamera);\n    // Get the x axis position.\n    const xAxisPos = vec2.fromValues(1, 0);\n    vec2.transformMat3(xAxisPos, xAxisPos, inspectObjToCamera);\n    // Get the y axis position.\n    const yAxisPos = vec2.fromValues(0, 1);\n    vec2.transformMat3(yAxisPos, yAxisPos, inspectObjToCamera);\n\n    // Normalize the axis: xEnd = xStart + normalize(xAxis - xStart)\n    vec2.add(\n      xAxisPos,\n      startPos,\n      vec2.scale(\n        vec2.create(),\n        vec2.normalize(\n          vec2.create(),\n          vec2.sub(vec2.create(), xAxisPos, startPos)\n        ),\n        axisLength\n      )\n    );\n\n    // Normalize the axis: yEnd = yStart + normalize(yAxis - yStart)\n    vec2.add(\n      yAxisPos,\n      startPos,\n      vec2.scale(\n        vec2.create(),\n        vec2.normalize(\n          vec2.create(),\n          vec2.sub(vec2.create(), yAxisPos, startPos)\n        ),\n        axisLength\n      )\n    );\n\n    // Draw the x axis.\n    this.canvasContext.strokeStyle = \"red\";\n    this.canvasContext.beginPath();\n    this.canvasContext.lineWidth = 2;\n    this.canvasContext.moveTo(startPos[0], startPos[1]);\n    this.canvasContext.lineTo(xAxisPos[0], xAxisPos[1]);\n    this.canvasContext.stroke();\n\n    // Draw the y axis.\n    this.canvasContext.strokeStyle = \"blue\";\n    this.canvasContext.beginPath();\n    this.canvasContext.lineWidth = 2;\n    this.canvasContext.moveTo(startPos[0], startPos[1]);\n    this.canvasContext.lineTo(yAxisPos[0], yAxisPos[1]);\n    this.canvasContext.stroke();\n  }\n\n  drawHighlight(highlightObjToCamera: mat3): void {\n    // Get the highlight position.\n    const startPos = vec2.fromValues(0, 0);\n    vec2.transformMat3(startPos, startPos, highlightObjToCamera);\n\n    this.canvasContext.beginPath();\n    this.canvasContext.strokeStyle = \"blue\";\n    this.canvasContext.lineWidth = 2;\n    this.canvasContext.arc(\n      startPos[0],\n      startPos[1],\n      highlightThreshold,\n      0,\n      2 * Math.PI\n    );\n    this.canvasContext.stroke();\n  }\n}\n", "import { main } from \".\";\nimport { editorInit } from \"../white-dwarf/src/Editor\";\n\nwindow.onload = () => {\n  main();\n\n  editorInit();\n};\n"],
  "mappings": "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",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "len", "once", "copy", "clone", "Component", "EventEmitter", "clone", "Component", "Component", "Component", "Component", "System", "IComponent", "scale", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "create", "clone", "copy", "fromValues", "set", "identity", "transpose", "invert", "adjoint", "determinant", "multiply", "translate", "scale", "rotate", "len", "fromTranslation", "fromScaling", "fromRotation", "fromQuat", "str", "frob", "add", "subtract", "multiplyScalar", "multiplyScalarAndAdd", "exactEquals", "equals", "mul", "sub", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "create", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "equals", "forEach", "create", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat3", "transformMat4", "rotate", "angle", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "Component", "perspective", "import_js_file_download", "component", "distance", "component", "componentObject", "fileDownload", "addComponentButton", "componentList", "_a", "e", "fileDownload"]
}
